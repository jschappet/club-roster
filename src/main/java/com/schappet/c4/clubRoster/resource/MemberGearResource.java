package com.schappet.c4.clubRoster.resource;



import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

import javax.validation.Valid;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.NonUniqueObjectException;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.*;

import com.schappet.c4.clubRoster.domain.*;
import edu.uiowa.icts.exception.EntityNotFoundException;
import edu.uiowa.icts.spring.GenericDaoListOptions;

/**
 * Generated by Protogen 
 * @see <a href="https://github.com/ui-icts/protogen">https://github.com/ui-icts/protogen</a>
 * @since 04/23/2016 10:55:33 CDT
 */
@RestController( value = "com_schappet_c4_clubRoster_resource_membergear_resource" )
@RequestMapping( "/rest/membergear" )
public class MemberGearResource extends AbstractClubRosterApiResource {

    private static final Log log = LogFactory.getLog( MemberGearResource.class );
    
    @RequestMapping( value = { "{memberGearId}" }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public MemberGear get( @PathVariable( "memberGearId" ) Integer memberGearId ) {
    	 MemberGear memberGear = clubRosterDaoService.getMemberGearService().findById( memberGearId );
		 if (memberGear == null){
			 throw new EntityNotFoundException();
		 } 
	     return memberGear;
    }
    
    @RequestMapping( method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE  )
    public MemberGear create( @RequestBody @Valid MemberGear memberGear ) {
		 clubRosterDaoService.getMemberGearService().save( memberGear );
		 return memberGear;
    }
    
    @RequestMapping( value = { "{memberGearId}" }, method = { RequestMethod.POST, RequestMethod.PUT }, produces = MediaType.APPLICATION_JSON_VALUE  )
    public MemberGear update( @PathVariable( "memberGearId" ) Integer memberGearId, @RequestBody @Valid MemberGear memberGear ) {
    	MemberGear memberGearRecord = clubRosterDaoService.getMemberGearService().findById( memberGearId );
    	if ( memberGearRecord == null || !memberGearRecord.getMemberGearId().equals(memberGear.getMemberGearId())){
			 throw new EntityNotFoundException(); 
		 } 
    	 clubRosterDaoService.getMemberGearService().getSession().flush();
         clubRosterDaoService.getMemberGearService().getSession().clear();
		 clubRosterDaoService.getMemberGearService().update( memberGear );
		 return memberGear;
    }
    
    @RequestMapping( value = { "{memberGearId}" }, method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE )
    public String delete( @PathVariable( "memberGearId" ) Integer memberGearId ) {
    	MemberGear memberGear = clubRosterDaoService.getMemberGearService().findById( memberGearId );
		 if ( memberGear == null ){
			 throw new EntityNotFoundException();
		 } 
		 clubRosterDaoService.getMemberGearService().delete(memberGear);
	     return "";
    }
    
    @RequestMapping( value = {  "", "/"  }, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE )
    public List<MemberGear> list() {
    	 return clubRosterDaoService.getMemberGearService().list();
    }

}